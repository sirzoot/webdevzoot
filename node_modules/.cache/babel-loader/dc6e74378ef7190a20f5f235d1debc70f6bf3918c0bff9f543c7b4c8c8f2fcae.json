{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API service functions\nexport const contactService = {\n  // Send contact form data to backend\n  sendContactForm: async formData => {\n    try {\n      const response = await api.post('/contact', formData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\n// Health check function\nexport const checkApiHealth = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('API Health Check Failed:', error);\n    return {\n      status: 'error',\n      message: 'API is not available'\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","NODE_ENV","headers","contactService","sendContactForm","formData","response","post","data","error","checkApiHealth","get","console","status","message"],"sources":["C:/Users/Laurence/Downloads/larry-website-source/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' \n    ? '/api' \n    : 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API service functions\nexport const contactService = {\n  // Send contact form data to backend\n  sendContactForm: async (formData) => {\n    try {\n      const response = await api.post('/contact', formData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\n// Health check function\nexport const checkApiHealth = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('API Health Check Failed:', error);\n    return { status: 'error', message: 'API is not available' };\n  }\n};\n\nexport default api;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAC1C,MAAM,GACN,2BAA2B;EAC/BC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAG;EAC5B;EACAC,eAAe,EAAE,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,UAAU,EAAEF,QAAQ,CAAC;MACrD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMV,GAAG,CAACe,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO;MAAEI,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAuB,CAAC;EAC7D;AACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}